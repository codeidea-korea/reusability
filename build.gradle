buildscript {
	ext {
		springBootVersion = '2.7.1'
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.codeidea'
	version = '1.0.0-SNAPSHOT'
	sourceCompatibility = '11'

	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if(! it.exists()) {
				it.mkdirs()
			}
		}

		sourceSets*.resources.srcDirs*.each {
			if(! it.exists()) {
				it.mkdirs()
			}
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		testImplementation 'org.springframework.security:spring-security-test'

		implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
		implementation 'org.modelmapper:modelmapper:2.4.4'
		implementation 'org.slf4j:jcl-over-slf4j'
		implementation 'ch.qos.logback:logback-classic'
		implementation 'org.json:org.json:chargebee-1.0'
		implementation 'com.googlecode.json-simple:json-simple:1.1.1'
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'commons-io:commons-io:2.11.0'

		implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	}

	test {
		useJUnitPlatform()
	}
}

project(':reusability-web') {
	dependencies {
		implementation project(':reusability-common')
		implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
		implementation 'javax.servlet:jstl'
	}
}
project(':reusability-common') {
	dependencies {
	}
}
